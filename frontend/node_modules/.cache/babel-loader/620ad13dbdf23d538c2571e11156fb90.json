{"ast":null,"code":"import Logger from './Logger';\nconst url = 'http://localhost:8080/person';\nconst logger = Logger.getLogger();\nexport default class PersonService {\n  async get() {\n    const response = await fetch(url);\n    const json = await response.json();\n    return json;\n  }\n\n  async put(person) {\n    try {\n      logger.on('finish', async function (info) {\n        logger.info(JSON.stringify(person), {});\n        logger.info('before fetch put', {});\n        logger.info(person.id, {});\n        const response = await fetch(url + '/' + person.id, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(person)\n        });\n        await logger.info(JSON.stringify(response), {});\n      });\n      logger.end();\n      return await response.status;\n    } catch (error) {\n      logger.error(error, {});\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/steinkorsveien/Development/SpringBotTest/RestTutorial/frontend/src/PersonService.jsx"],"names":["Logger","url","logger","getLogger","PersonService","get","response","fetch","json","put","person","on","info","JSON","stringify","id","method","headers","body","end","status","error"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,MAAMC,GAAG,GAAG,8BAAZ;AACA,MAAMC,MAAM,GAAGF,MAAM,CAACG,SAAP,EAAf;AACA,eAAe,MAAMC,aAAN,CAAqB;AAGnC,QAAMC,GAAN,GAAY;AACR,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,GAAD,CAA5B;AACA,UAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AAEH,WAAOA,IAAP;AACG;;AAEJ,QAAMC,GAAN,CAAUC,MAAV,EAAkB;AAEhB,QAAI;AACJR,MAAAA,MAAM,CAACS,EAAP,CAAU,QAAV,EAAoB,gBAAgBC,IAAhB,EAAsB;AACvCV,QAAAA,MAAM,CAACU,IAAP,CAAYC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAAZ,EAAmC,EAAnC;AACAR,QAAAA,MAAM,CAACU,IAAP,CAAY,kBAAZ,EAA+B,EAA/B;AACAV,QAAAA,MAAM,CAACU,IAAP,CAAYF,MAAM,CAACK,EAAnB,EAAsB,EAAtB;AACE,cAAMT,QAAQ,GAAG,MAAMC,KAAK,CAACN,GAAG,GAAG,GAAN,GAAYS,MAAM,CAACK,EAApB,EAC5B;AAACC,UAAAA,MAAM,EAAE,KAAT;AACGC,UAAAA,OAAO,EAAE;AACf,4BAAgB;AADD,WADZ;AAIAC,UAAAA,IAAI,EAAEL,IAAI,CAACC,SAAL,CAAeJ,MAAf;AAJN,SAD4B,CAA5B;AAOJ,cAAMR,MAAM,CAACU,IAAP,CAAYC,IAAI,CAACC,SAAL,CAAeR,QAAf,CAAZ,EAAqC,EAArC,CAAN;AACC,OAZF;AAaCJ,MAAAA,MAAM,CAACiB,GAAP;AACC,aAAO,MAAMb,QAAQ,CAACc,MAAtB;AACF,KAhBA,CAgBC,OAAMC,KAAN,EACF;AACEnB,MAAAA,MAAM,CAACmB,KAAP,CAAaA,KAAb,EAAmB,EAAnB;AACC;AACD;;AAhCgC","sourcesContent":["import Logger from './Logger'\nconst url = 'http://localhost:8080/person'\nconst logger = Logger.getLogger()\nexport default class PersonService  { \n\t\n     \n\tasync get() { \n\t\t\t  const response = await fetch(url);\n\t\t\t  const json = await response.json()\n\t   \n\t\treturn json\n\t   }\n\n\tasync put(person) {\n     \n\t\t try {\n\t\t\tlogger.on('finish', async function (info) {\n\t\t\t   logger.info(JSON.stringify(person),{} )\n\t\t\t   logger.info('before fetch put',{})\n\t\t\t   logger.info(person.id,{})\n\t\t      const response = await fetch(url + '/' + person.id, \n\t\t\t     {method: 'PUT',\t \n\t\t         headers: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t   },\n\t\t\t     body: JSON.stringify(person)\n\t\t\t   })\n\t\t\t\tawait logger.info(JSON.stringify(response),{})\n\t\t\t })\n\t\t\t logger.end()\n\t\t   return await response.status\n\t\t}\tcatch(error)\n\t\t{\n\t\t  logger.error(error,{})\n\t   }\t\n   }\n}\n"]},"metadata":{},"sourceType":"module"}