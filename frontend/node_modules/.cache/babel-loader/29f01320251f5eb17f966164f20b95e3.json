{"ast":null,"code":"'use strict';\n/*\n * Displays a helpful message and the source of\n * the format when it is invalid.\n */\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar InvalidFormatError =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(InvalidFormatError, _Error);\n\n  function InvalidFormatError(formatFn) {\n    var _this;\n\n    _classCallCheck(this, InvalidFormatError);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InvalidFormatError).call(this, \"Format functions must be synchronous taking a two arguments: (info, opts)\\nFound: \".concat(formatFn.toString().split('\\n')[0], \"\\n\")));\n    Error.captureStackTrace(_assertThisInitialized(_assertThisInitialized(_this)), InvalidFormatError);\n    return _this;\n  }\n\n  return InvalidFormatError;\n}(_wrapNativeSuper(Error));\n/*\n * function format (formatFn)\n * Returns a create function for the `formatFn`.\n */\n\n\nmodule.exports = function (formatFn) {\n  if (formatFn.length > 2) {\n    throw new InvalidFormatError(formatFn);\n  }\n  /*\n   * function Format (options)\n   * Base prototype which calls a `_format`\n   * function and pushes the result.\n   */\n\n\n  function Format() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.options = options;\n  }\n\n  Format.prototype.transform = formatFn; //\n  // Create a function which returns new instances of\n  // FormatWrap for simple syntax like:\n  //\n  // require('winston').formats.json();\n  //\n\n  function createFormatWrap(opts) {\n    return new Format(opts);\n  } //\n  // Expose the FormatWrap through the create function\n  // for testability.\n  //\n\n\n  createFormatWrap.Format = Format;\n  return createFormatWrap;\n};","map":{"version":3,"sources":["/Users/steinkorsveien/Development/SpringBotTest/RestTutorial/frontend/node_modules/logform/dist/format.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","_assertThisInitialized","_inherits","subClass","superClass","Object","create","value","writable","configurable","_setPrototypeOf","ReferenceError","_wrapNativeSuper","Class","_cache","Map","undefined","_isNativeFunction","has","get","set","Wrapper","_construct","arguments","_getPrototypeOf","enumerable","isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","e","Parent","args","a","push","apply","Function","bind","fn","indexOf","o","p","setPrototypeOf","__proto__","getPrototypeOf","InvalidFormatError","_Error","formatFn","_this","concat","split","Error","captureStackTrace","module","exports","length","Format","options","transform","createFormatWrap","opts"],"mappings":"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","sourcesContent":["'use strict';\n/*\n * Displays a helpful message and the source of\n * the format when it is invalid.\n */\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar InvalidFormatError =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(InvalidFormatError, _Error);\n\n  function InvalidFormatError(formatFn) {\n    var _this;\n\n    _classCallCheck(this, InvalidFormatError);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InvalidFormatError).call(this, \"Format functions must be synchronous taking a two arguments: (info, opts)\\nFound: \".concat(formatFn.toString().split('\\n')[0], \"\\n\")));\n    Error.captureStackTrace(_assertThisInitialized(_assertThisInitialized(_this)), InvalidFormatError);\n    return _this;\n  }\n\n  return InvalidFormatError;\n}(_wrapNativeSuper(Error));\n/*\n * function format (formatFn)\n * Returns a create function for the `formatFn`.\n */\n\n\nmodule.exports = function (formatFn) {\n  if (formatFn.length > 2) {\n    throw new InvalidFormatError(formatFn);\n  }\n  /*\n   * function Format (options)\n   * Base prototype which calls a `_format`\n   * function and pushes the result.\n   */\n\n\n  function Format() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.options = options;\n  }\n\n  Format.prototype.transform = formatFn; //\n  // Create a function which returns new instances of\n  // FormatWrap for simple syntax like:\n  //\n  // require('winston').formats.json();\n  //\n\n  function createFormatWrap(opts) {\n    return new Format(opts);\n  } //\n  // Expose the FormatWrap through the create function\n  // for testability.\n  //\n\n\n  createFormatWrap.Format = Format;\n  return createFormatWrap;\n};"]},"metadata":{},"sourceType":"script"}