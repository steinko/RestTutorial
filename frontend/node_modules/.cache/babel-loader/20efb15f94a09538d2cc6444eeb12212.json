{"ast":null,"code":"import Logger from './Logger';\nconst url = 'http://localhost:8080/person';\nconst logger = Logger.getLogger();\nexport default class PersonService {\n  async get() {\n    const response = await fetch(url);\n    const json = await response.json();\n    return json;\n  }\n\n  async put(person) {\n    try {\n      logger.info(person, {});\n      logger.info('before fetch put', {});\n      logger.info(person.id, {});\n      const response = await fetch(url + '/' + person.id, {\n        method: 'PUT',\n        body: person,\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      });\n      await logger.info(JSON.stringify(response), {});\n      return response.status;\n    } catch (error) {\n      logger.error(error, {});\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/steinkorsveien/Development/SpringBotTest/RestTutorial/frontend/src/PersonService.jsx"],"names":["Logger","url","logger","getLogger","PersonService","get","response","fetch","json","put","person","info","id","method","body","headers","JSON","stringify","status","error"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,MAAMC,GAAG,GAAG,8BAAZ;AACA,MAAMC,MAAM,GAAGF,MAAM,CAACG,SAAP,EAAf;AACA,eAAe,MAAMC,aAAN,CAAqB;AAGnC,QAAMC,GAAN,GAAY;AACR,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,GAAD,CAA5B;AACA,UAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AAEH,WAAOA,IAAP;AACG;;AAEJ,QAAMC,GAAN,CAAUC,MAAV,EAAkB;AAEhB,QAAI;AAEDR,MAAAA,MAAM,CAACS,IAAP,CAAYD,MAAZ,EAAmB,EAAnB;AACAR,MAAAA,MAAM,CAACS,IAAP,CAAY,kBAAZ,EAA+B,EAA/B;AACAT,MAAAA,MAAM,CAACS,IAAP,CAAYD,MAAM,CAACE,EAAnB,EAAsB,EAAtB;AACE,YAAMN,QAAQ,GAAG,MAAMC,KAAK,CAACN,GAAG,GAAG,GAAN,GAAYS,MAAM,CAACE,EAApB,EAC9B;AAACC,QAAAA,MAAM,EAAE,KAAT;AACCC,QAAAA,IAAI,EAAEJ,MADP;AAEKK,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB;AAFd,OAD8B,CAA5B;AAOJ,YAAMb,MAAM,CAACS,IAAP,CAAYK,IAAI,CAACC,SAAL,CAAeX,QAAf,CAAZ,EAAqC,EAArC,CAAN;AAEI,aAAQA,QAAQ,CAACY,MAAjB;AACL,KAfA,CAeC,OAAMC,KAAN,EACF;AACEjB,MAAAA,MAAM,CAACiB,KAAP,CAAaA,KAAb,EAAmB,EAAnB;AACC;AACD;;AA/BgC","sourcesContent":["import Logger from './Logger'\nconst url = 'http://localhost:8080/person'\nconst logger = Logger.getLogger()\nexport default class PersonService  { \n\t\n     \n\tasync get() { \n\t\t\t  const response = await fetch(url);\n\t\t\t  const json = await response.json()\n\t   \n\t\treturn json\n\t   }\n\n\tasync put(person) {\n     \n\t\t try {\n\t\t\t\n\t\t\t   logger.info(person,{} )\n\t\t\t   logger.info('before fetch put',{})\n\t\t\t   logger.info(person.id,{})\n\t\t      const response = await fetch(url + '/' + person.id, \n\t\t\t\t  {method: 'PUT',\t \n\t\t\t\t   body: person,\n\t\t         headers: { \"Content-type\": \"application/json; charset=UTF-8\" }\t\t  \n\t\t\t\t  }\n\t\t\t\t)\n\n\t\t\t\tawait logger.info(JSON.stringify(response),{})\n\t\t\t   \n\t\t      return  response.status\n\t\t}\tcatch(error)\n\t\t{\n\t\t  logger.error(error,{})\n\t   }\t\n   }\n}\n"]},"metadata":{},"sourceType":"module"}