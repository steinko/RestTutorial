{"ast":null,"code":"'use strict';\n\nvar format = require('./format');\n\nvar _require = require('triple-beam'),\n    MESSAGE = _require.MESSAGE;\n\nvar jsonStringify = require('fast-safe-stringify');\n/*\n * function replacer (key, value)\n * Handles proper stringification of Buffer output.\n */\n\n\nfunction replacer(key, value) {\n  return value instanceof Buffer ? value.toString('base64') : value;\n}\n/*\n * function json (info)\n * Returns a new instance of the JSON format that turns a log `info`\n * object into pure JSON. This was previously exposed as { json: true }\n * to transports in `winston < 3.0.0`.\n */\n\n\nmodule.exports = format(function (info) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  info[MESSAGE] = jsonStringify(info, opts.replacer || replacer, opts.space);\n  return info;\n});","map":{"version":3,"sources":["/Users/steinkorsveien/Development/SpringBotTest/RestTutorial/frontend/node_modules/logform/dist/json.js"],"names":["format","require","_require","MESSAGE","jsonStringify","replacer","key","value","Buffer","toString","module","exports","info","opts","arguments","length","undefined","space"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;;AAEA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,aAAD,CAAtB;AAAA,IACIE,OAAO,GAAGD,QAAQ,CAACC,OADvB;;AAGA,IAAIC,aAAa,GAAGH,OAAO,CAAC,qBAAD,CAA3B;AACA;;;;;;AAMA,SAASI,QAAT,CAAkBC,GAAlB,EAAuBC,KAAvB,EAA8B;AAC5B,SAAOA,KAAK,YAAYC,MAAjB,GAA0BD,KAAK,CAACE,QAAN,CAAe,QAAf,CAA1B,GAAqDF,KAA5D;AACD;AACD;;;;;;;;AAQAG,MAAM,CAACC,OAAP,GAAiBX,MAAM,CAAC,UAAUY,IAAV,EAAgB;AACtC,MAAIC,IAAI,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA/E;AACAF,EAAAA,IAAI,CAACT,OAAD,CAAJ,GAAgBC,aAAa,CAACQ,IAAD,EAAOC,IAAI,CAACR,QAAL,IAAiBA,QAAxB,EAAkCQ,IAAI,CAACI,KAAvC,CAA7B;AACA,SAAOL,IAAP;AACD,CAJsB,CAAvB","sourcesContent":["'use strict';\n\nvar format = require('./format');\n\nvar _require = require('triple-beam'),\n    MESSAGE = _require.MESSAGE;\n\nvar jsonStringify = require('fast-safe-stringify');\n/*\n * function replacer (key, value)\n * Handles proper stringification of Buffer output.\n */\n\n\nfunction replacer(key, value) {\n  return value instanceof Buffer ? value.toString('base64') : value;\n}\n/*\n * function json (info)\n * Returns a new instance of the JSON format that turns a log `info`\n * object into pure JSON. This was previously exposed as { json: true }\n * to transports in `winston < 3.0.0`.\n */\n\n\nmodule.exports = format(function (info) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  info[MESSAGE] = jsonStringify(info, opts.replacer || replacer, opts.space);\n  return info;\n});"]},"metadata":{},"sourceType":"script"}