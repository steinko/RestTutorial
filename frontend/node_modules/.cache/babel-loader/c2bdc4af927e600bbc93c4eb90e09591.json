{"ast":null,"code":"var _ = require('lodash');\n\nvar utils = require('./utils');\n/**\n * Constructs a client action factory that uses specific defaults\n * @type {Function}\n */\n\n\nexports.makeFactoryWithModifier = makeFactoryWithModifier;\n/**\n * Constructs a function that can be called to make a request to ES\n * @type {Function}\n */\n\nexports.factory = makeFactoryWithModifier();\n/**\n * Constructs a proxy to another api method\n * @type {Function}\n */\n\nexports.proxyFactory = exports.factory.proxy; // export so that we can test this\n\nexports._resolveUrl = resolveUrl;\n\nexports.ApiNamespace = function () {};\n\nexports.namespaceFactory = function () {\n  function ClientNamespace(transport, client) {\n    this.transport = transport;\n    this.client = client;\n  }\n\n  ClientNamespace.prototype = new exports.ApiNamespace();\n  return ClientNamespace;\n};\n\nfunction makeFactoryWithModifier(modifier) {\n  modifier = modifier || _.identity;\n\n  var factory = function (spec) {\n    spec = modifier(spec);\n\n    if (!_.isPlainObject(spec.params)) {\n      spec.params = {};\n    }\n\n    if (!spec.method) {\n      spec.method = 'GET';\n    }\n\n    function action(params, cb) {\n      if (typeof params === 'function') {\n        cb = params;\n        params = {};\n      } else {\n        params = params || {};\n        cb = typeof cb === 'function' ? cb : null;\n      }\n\n      try {\n        return exec(this.transport, spec, _.clone(params), cb);\n      } catch (e) {\n        if (typeof cb === 'function') {\n          utils.nextTick(cb, e);\n        } else {\n          var def = this.transport.defer();\n          def.reject(e);\n          return def.promise;\n        }\n      }\n    }\n\n    action.spec = spec;\n    return action;\n  };\n\n  factory.proxy = function (fn, spec) {\n    return function (params, cb) {\n      if (typeof params === 'function') {\n        cb = params;\n        params = {};\n      } else {\n        params = params || {};\n        cb = typeof cb === 'function' ? cb : null;\n      }\n\n      if (spec.transform) {\n        spec.transform(params);\n      }\n\n      return fn.call(this, params, cb);\n    };\n  };\n\n  return factory;\n}\n\nvar castType = {\n  'enum': function validSelection(param, val, name) {\n    if (_.isString(val) && val.indexOf(',') > -1) {\n      val = commaSepList(val);\n    }\n\n    if (_.isArray(val)) {\n      return val.map(function (v) {\n        return validSelection(param, v, name);\n      }).join(',');\n    }\n\n    for (var i = 0; i < param.options.length; i++) {\n      if (param.options[i] === String(val)) {\n        return param.options[i];\n      }\n    }\n\n    throw new TypeError('Invalid ' + name + ': expected ' + (param.options.length > 1 ? 'one of ' + param.options.join(',') : param.options[0]));\n  },\n  duration: function (param, val, name) {\n    if (utils.isNumeric(val) || utils.isInterval(val)) {\n      return val;\n    } else {\n      throw new TypeError('Invalid ' + name + ': expected a number or interval ' + '(an integer followed by one of M, w, d, h, m, s, y or ms).');\n    }\n  },\n  list: function (param, val, name) {\n    switch (typeof val) {\n      case 'number':\n      case 'boolean':\n        return '' + val;\n\n      case 'string':\n        val = commaSepList(val);\n\n      /* falls through */\n\n      case 'object':\n        if (_.isArray(val)) {\n          return val.join(',');\n        }\n\n      /* falls through */\n\n      default:\n        throw new TypeError('Invalid ' + name + ': expected be a comma separated list, array, number or string.');\n    }\n  },\n  'boolean': function (param, val) {\n    val = _.isString(val) ? val.toLowerCase() : val;\n    return val === 'no' || val === 'off' ? false : !!val;\n  },\n  number: function (param, val, name) {\n    if (utils.isNumeric(val)) {\n      return val * 1;\n    } else {\n      throw new TypeError('Invalid ' + name + ': expected a number.');\n    }\n  },\n  string: function (param, val, name) {\n    switch (typeof val) {\n      case 'number':\n      case 'string':\n        return '' + val;\n\n      default:\n        throw new TypeError('Invalid ' + name + ': expected a string.');\n    }\n  },\n  time: function (param, val, name) {\n    if (typeof val === 'string') {\n      return val;\n    } else if (utils.isNumeric(val)) {\n      return '' + val;\n    } else if (val instanceof Date) {\n      return '' + val.getTime();\n    } else {\n      throw new TypeError('Invalid ' + name + ': expected some sort of time.');\n    }\n  }\n};\n\nfunction resolveUrl(url, params) {\n  var vars = {},\n      i,\n      key;\n\n  if (url.req) {\n    // url has required params\n    if (!url.reqParamKeys) {\n      // create cached key list on demand\n      url.reqParamKeys = _.keys(url.req);\n    }\n\n    for (i = 0; i < url.reqParamKeys.length; i++) {\n      key = url.reqParamKeys[i];\n\n      if (!params.hasOwnProperty(key) || params[key] == null) {\n        // missing a required param\n        return false;\n      } else {\n        // cast of copy required param\n        if (castType[url.req[key].type]) {\n          vars[key] = castType[url.req[key].type](url.req[key], params[key], key);\n        } else {\n          vars[key] = params[key];\n        }\n      }\n    }\n  }\n\n  if (url.opt) {\n    // url has optional params\n    if (!url.optParamKeys) {\n      url.optParamKeys = _.keys(url.opt);\n    }\n\n    for (i = 0; i < url.optParamKeys.length; i++) {\n      key = url.optParamKeys[i];\n\n      if (params[key]) {\n        if (castType[url.opt[key].type] || params[key] == null) {\n          vars[key] = castType[url.opt[key].type](url.opt[key], params[key], key);\n        } else {\n          vars[key] = params[key];\n        }\n      } else {\n        vars[key] = url.opt[key]['default'];\n      }\n    }\n  }\n\n  if (!url.template) {\n    // compile the template on demand\n    url.template = _.template(url.fmt);\n  }\n\n  return url.template(_.transform(vars, function (note, val, name) {\n    // encode each value\n    note[name] = encodeURIComponent(val); // remove it from the params so that it isn't sent to the final request\n\n    delete params[name];\n  }, {}));\n}\n\nfunction exec(transport, spec, params, cb) {\n  var request = {\n    method: spec.method\n  };\n  var query = {};\n  var i; // pass the timeout from the spec\n\n  if (spec.requestTimeout) {\n    request.requestTimeout = spec.requestTimeout;\n  }\n\n  if (!params.body && spec.paramAsBody) {\n    if (typeof spec.paramAsBody === 'object') {\n      params.body = {};\n\n      if (spec.paramAsBody.castToArray) {\n        params.body[spec.paramAsBody.body] = [].concat(params[spec.paramAsBody.param]);\n      } else {\n        params.body[spec.paramAsBody.body] = params[spec.paramAsBody.param];\n      }\n\n      delete params[spec.paramAsBody.param];\n    } else {\n      params.body = params[spec.paramAsBody];\n      delete params[spec.paramAsBody];\n    }\n  } // verify that we have the body if needed\n\n\n  if (spec.needsBody && !params.body) {\n    throw new TypeError('A request body is required.');\n  } // control params\n\n\n  if (spec.bulkBody) {\n    request.bulkBody = true;\n  }\n\n  if (spec.method === 'HEAD') {\n    request.castExists = true;\n  } // pick the url\n\n\n  if (spec.url) {\n    // only one url option\n    request.path = resolveUrl(spec.url, params);\n  } else {\n    for (i = 0; i < spec.urls.length; i++) {\n      if (request.path = resolveUrl(spec.urls[i], params)) {\n        break;\n      }\n    }\n  }\n\n  if (!request.path) {\n    // there must have been some mimimun requirements that were not met\n    var minUrl = spec.url || spec.urls[spec.urls.length - 1];\n    throw new TypeError('Unable to build a path with those params. Supply at least ' + _.keys(minUrl.req).join(', '));\n  } // build the query string\n\n\n  if (!spec.paramKeys) {\n    // build a key list on demand\n    spec.paramKeys = _.keys(spec.params);\n    spec.requireParamKeys = _.transform(spec.params, function (req, param, key) {\n      if (param.required) {\n        req.push(key);\n      }\n    }, []);\n  }\n\n  for (var key in params) {\n    if (params.hasOwnProperty(key) && params[key] != null) {\n      switch (key) {\n        case 'body':\n        case 'headers':\n        case 'requestTimeout':\n        case 'maxRetries':\n          request[key] = params[key];\n          break;\n\n        case 'ignore':\n          request.ignore = _.isArray(params[key]) ? params[key] : [params[key]];\n          break;\n\n        case 'method':\n          request.method = utils.toUpperString(params[key]);\n          break;\n\n        default:\n          var paramSpec = spec.params[key];\n\n          if (paramSpec) {\n            // param keys don't always match the param name, in those cases it's stored in the param def as \"name\"\n            paramSpec.name = paramSpec.name || key;\n\n            if (params[key] != null) {\n              if (castType[paramSpec.type]) {\n                query[paramSpec.name] = castType[paramSpec.type](paramSpec, params[key], key);\n              } else {\n                query[paramSpec.name] = params[key];\n              }\n\n              if (paramSpec['default'] && query[paramSpec.name] === paramSpec['default']) {\n                delete query[paramSpec.name];\n              }\n            }\n          } else {\n            query[key] = params[key];\n          }\n\n      }\n    }\n  }\n\n  for (i = 0; i < spec.requireParamKeys.length; i++) {\n    if (!query.hasOwnProperty(spec.requireParamKeys[i])) {\n      throw new TypeError('Missing required parameter ' + spec.requireParamKeys[i]);\n    }\n  }\n\n  request.query = query;\n  return transport.request(request, cb);\n}\n\nfunction commaSepList(str) {\n  return str.split(',').map(function (i) {\n    return i.trim();\n  });\n}","map":{"version":3,"sources":["/Users/steinkorsveien/Development/SpringBotTest/RestTutorial/frontend/node_modules/elasticsearch/src/lib/client_action.js"],"names":["_","require","utils","exports","makeFactoryWithModifier","factory","proxyFactory","proxy","_resolveUrl","resolveUrl","ApiNamespace","namespaceFactory","ClientNamespace","transport","client","prototype","modifier","identity","spec","isPlainObject","params","method","action","cb","exec","clone","e","nextTick","def","defer","reject","promise","fn","transform","call","castType","validSelection","param","val","name","isString","indexOf","commaSepList","isArray","map","v","join","i","options","length","String","TypeError","duration","isNumeric","isInterval","list","toLowerCase","number","string","time","Date","getTime","url","vars","key","req","reqParamKeys","keys","hasOwnProperty","type","opt","optParamKeys","template","fmt","note","encodeURIComponent","request","query","requestTimeout","body","paramAsBody","castToArray","concat","needsBody","bulkBody","castExists","path","urls","minUrl","paramKeys","requireParamKeys","required","push","ignore","toUpperString","paramSpec","str","split","trim"],"mappings":"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","sourcesContent":["\nvar _ = require('lodash');\nvar utils = require('./utils');\n\n/**\n * Constructs a client action factory that uses specific defaults\n * @type {Function}\n */\nexports.makeFactoryWithModifier = makeFactoryWithModifier;\n\n/**\n * Constructs a function that can be called to make a request to ES\n * @type {Function}\n */\nexports.factory = makeFactoryWithModifier();\n\n/**\n * Constructs a proxy to another api method\n * @type {Function}\n */\nexports.proxyFactory = exports.factory.proxy;\n\n// export so that we can test this\nexports._resolveUrl = resolveUrl;\n\nexports.ApiNamespace = function () {};\nexports.namespaceFactory = function () {\n  function ClientNamespace(transport, client) {\n    this.transport = transport;\n    this.client = client;\n  }\n\n  ClientNamespace.prototype = new exports.ApiNamespace();\n\n  return ClientNamespace;\n};\n\nfunction makeFactoryWithModifier(modifier) {\n  modifier = modifier || _.identity;\n\n  var factory = function (spec) {\n    spec = modifier(spec);\n\n    if (!_.isPlainObject(spec.params)) {\n      spec.params = {};\n    }\n\n    if (!spec.method) {\n      spec.method = 'GET';\n    }\n\n    function action(params, cb) {\n      if (typeof params === 'function') {\n        cb = params;\n        params = {};\n      } else {\n        params = params || {};\n        cb = typeof cb === 'function' ? cb : null;\n      }\n\n      try {\n        return exec(this.transport, spec, _.clone(params), cb);\n      } catch (e) {\n        if (typeof cb === 'function') {\n          utils.nextTick(cb, e);\n        } else {\n          var def = this.transport.defer();\n          def.reject(e);\n          return def.promise;\n        }\n      }\n    }\n\n    action.spec = spec;\n\n    return action;\n  };\n\n  factory.proxy = function (fn, spec) {\n    return function (params, cb) {\n      if (typeof params === 'function') {\n        cb = params;\n        params = {};\n      } else {\n        params = params || {};\n        cb = typeof cb === 'function' ? cb : null;\n      }\n\n      if (spec.transform) {\n        spec.transform(params);\n      }\n\n      return fn.call(this, params, cb);\n    };\n  };\n\n  return factory;\n}\n\nvar castType = {\n  'enum': function validSelection(param, val, name) {\n    if (_.isString(val) && val.indexOf(',') > -1) {\n      val = commaSepList(val);\n    }\n\n    if (_.isArray(val)) {\n      return val.map(function (v) {\n        return validSelection(param, v, name);\n      }).join(',');\n    }\n\n    for (var i = 0; i < param.options.length; i++) {\n      if (param.options[i] === String(val)) {\n        return param.options[i];\n      }\n    }\n    throw new TypeError('Invalid ' + name + ': expected ' + (\n      param.options.length > 1\n      ? 'one of ' + param.options.join(',')\n      : param.options[0]\n    ));\n  },\n  duration: function (param, val, name) {\n    if (utils.isNumeric(val) || utils.isInterval(val)) {\n      return val;\n    } else {\n      throw new TypeError(\n        'Invalid ' + name + ': expected a number or interval ' +\n        '(an integer followed by one of M, w, d, h, m, s, y or ms).'\n      );\n    }\n  },\n  list: function (param, val, name) {\n    switch (typeof val) {\n      case 'number':\n      case 'boolean':\n        return '' + val;\n      case 'string':\n        val = commaSepList(val);\n      /* falls through */\n      case 'object':\n        if (_.isArray(val)) {\n          return val.join(',');\n        }\n      /* falls through */\n      default:\n        throw new TypeError('Invalid ' + name + ': expected be a comma separated list, array, number or string.');\n    }\n  },\n  'boolean': function (param, val) {\n    val = _.isString(val) ? val.toLowerCase() : val;\n    return (val === 'no' || val === 'off') ? false : !!val;\n  },\n  number: function (param, val, name) {\n    if (utils.isNumeric(val)) {\n      return val * 1;\n    } else {\n      throw new TypeError('Invalid ' + name + ': expected a number.');\n    }\n  },\n  string: function (param, val, name) {\n    switch (typeof val) {\n      case 'number':\n      case 'string':\n        return '' + val;\n      default:\n        throw new TypeError('Invalid ' + name + ': expected a string.');\n    }\n  },\n  time: function (param, val, name) {\n    if (typeof val === 'string') {\n      return val;\n    }\n    else if (utils.isNumeric(val)) {\n      return '' + val;\n    }\n    else if (val instanceof Date) {\n      return '' + val.getTime();\n    }\n    else {\n      throw new TypeError('Invalid ' + name + ': expected some sort of time.');\n    }\n  }\n};\n\nfunction resolveUrl(url, params) {\n  var vars = {}, i, key;\n\n  if (url.req) {\n    // url has required params\n    if (!url.reqParamKeys) {\n      // create cached key list on demand\n      url.reqParamKeys = _.keys(url.req);\n    }\n\n    for (i = 0; i < url.reqParamKeys.length; i ++) {\n      key = url.reqParamKeys[i];\n      if (!params.hasOwnProperty(key) || params[key] == null) {\n        // missing a required param\n        return false;\n      } else {\n        // cast of copy required param\n        if (castType[url.req[key].type]) {\n          vars[key] = castType[url.req[key].type](url.req[key], params[key], key);\n        } else {\n          vars[key] = params[key];\n        }\n      }\n    }\n  }\n\n  if (url.opt) {\n    // url has optional params\n    if (!url.optParamKeys) {\n      url.optParamKeys = _.keys(url.opt);\n    }\n\n    for (i = 0; i < url.optParamKeys.length; i ++) {\n      key = url.optParamKeys[i];\n      if (params[key]) {\n        if (castType[url.opt[key].type] || params[key] == null) {\n          vars[key] = castType[url.opt[key].type](url.opt[key], params[key], key);\n        } else {\n          vars[key] = params[key];\n        }\n      } else {\n        vars[key] = url.opt[key]['default'];\n      }\n    }\n  }\n\n  if (!url.template) {\n    // compile the template on demand\n    url.template = _.template(url.fmt);\n  }\n\n  return url.template(_.transform(vars, function (note, val, name) {\n    // encode each value\n    note[name] = encodeURIComponent(val);\n    // remove it from the params so that it isn't sent to the final request\n    delete params[name];\n  }, {}));\n}\n\n\nfunction exec(transport, spec, params, cb) {\n  var request = {\n    method: spec.method\n  };\n  var query = {};\n  var i;\n\n  // pass the timeout from the spec\n  if (spec.requestTimeout) {\n    request.requestTimeout = spec.requestTimeout;\n  }\n\n  if (!params.body && spec.paramAsBody) {\n    if (typeof spec.paramAsBody === 'object') {\n      params.body = {};\n      if (spec.paramAsBody.castToArray) {\n        params.body[spec.paramAsBody.body] = [].concat(params[spec.paramAsBody.param]);\n      } else {\n        params.body[spec.paramAsBody.body] = params[spec.paramAsBody.param];\n      }\n      delete params[spec.paramAsBody.param];\n    } else {\n      params.body = params[spec.paramAsBody];\n      delete params[spec.paramAsBody];\n    }\n  }\n\n  // verify that we have the body if needed\n  if (spec.needsBody && !params.body) {\n    throw new TypeError('A request body is required.');\n  }\n\n  // control params\n  if (spec.bulkBody) {\n    request.bulkBody = true;\n  }\n\n  if (spec.method === 'HEAD') {\n    request.castExists = true;\n  }\n\n  // pick the url\n  if (spec.url) {\n    // only one url option\n    request.path = resolveUrl(spec.url, params);\n  } else {\n    for (i = 0; i < spec.urls.length; i++) {\n      if (request.path = resolveUrl(spec.urls[i], params)) {\n        break;\n      }\n    }\n  }\n\n  if (!request.path) {\n    // there must have been some mimimun requirements that were not met\n    var minUrl = spec.url || spec.urls[spec.urls.length - 1];\n    throw new TypeError('Unable to build a path with those params. Supply at least ' + _.keys(minUrl.req).join(', '));\n  }\n\n  // build the query string\n  if (!spec.paramKeys) {\n    // build a key list on demand\n    spec.paramKeys = _.keys(spec.params);\n    spec.requireParamKeys = _.transform(spec.params, function (req, param, key) {\n      if (param.required) {\n        req.push(key);\n      }\n    }, []);\n  }\n\n  for (var key in params) {\n    if (params.hasOwnProperty(key) && params[key] != null) {\n      switch (key) {\n        case 'body':\n        case 'headers':\n        case 'requestTimeout':\n        case 'maxRetries':\n          request[key] = params[key];\n          break;\n        case 'ignore':\n          request.ignore = _.isArray(params[key]) ? params[key] : [params[key]];\n          break;\n        case 'method':\n          request.method = utils.toUpperString(params[key]);\n          break;\n        default:\n          var paramSpec = spec.params[key];\n          if (paramSpec) {\n          // param keys don't always match the param name, in those cases it's stored in the param def as \"name\"\n            paramSpec.name = paramSpec.name || key;\n            if (params[key] != null) {\n              if (castType[paramSpec.type]) {\n                query[paramSpec.name] = castType[paramSpec.type](paramSpec, params[key], key);\n              } else {\n                query[paramSpec.name] = params[key];\n              }\n\n              if (paramSpec['default'] && query[paramSpec.name] === paramSpec['default']) {\n                delete query[paramSpec.name];\n              }\n            }\n          } else {\n            query[key] = params[key];\n          }\n      }\n    }\n  }\n\n  for (i = 0; i < spec.requireParamKeys.length; i ++) {\n    if (!query.hasOwnProperty(spec.requireParamKeys[i])) {\n      throw new TypeError('Missing required parameter ' + spec.requireParamKeys[i]);\n    }\n  }\n\n  request.query = query;\n\n  return transport.request(request, cb);\n}\n\nfunction commaSepList(str) {\n  return str.split(',').map(function (i) {\n    return i.trim();\n  });\n}\n"]},"metadata":{},"sourceType":"script"}