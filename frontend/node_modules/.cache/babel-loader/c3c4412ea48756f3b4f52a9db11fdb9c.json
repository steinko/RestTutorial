{"ast":null,"code":"/**\n * logger.js: TODO: add file header description.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n'use strict';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar _require = require('readable-stream'),\n    Stream = _require.Stream,\n    Transform = _require.Transform;\n\nvar asyncForEach = require('async/forEach');\n\nvar _require2 = require('triple-beam'),\n    LEVEL = _require2.LEVEL,\n    SPLAT = _require2.SPLAT;\n\nvar isStream = require('is-stream');\n\nvar ExceptionHandler = require('./exception-handler');\n\nvar RejectionHandler = require('./rejection-handler');\n\nvar LegacyTransportStream = require('winston-transport/legacy');\n\nvar Profiler = require('./profiler');\n\nvar _require3 = require('./common'),\n    warn = _require3.warn;\n\nvar config = require('./config');\n/**\n * Captures the number of format (i.e. %s strings) in a given string.\n * Based on `util.format`, see Node.js source:\n * https://github.com/nodejs/node/blob/b1c8f15c5f169e021f7c46eb7b219de95fe97603/lib/util.js#L201-L230\n * @type {RegExp}\n */\n\n\nvar formatRegExp = /%[scdjifoO%]/g;\n/**\n * TODO: add class description.\n * @type {Logger}\n * @extends {Transform}\n */\n\nvar Logger =\n/*#__PURE__*/\nfunction (_Transform) {\n  _inherits(Logger, _Transform);\n  /**\n   * Constructor function for the Logger object responsible for persisting log\n   * messages and metadata to one or more transports.\n   * @param {!Object} options - foo\n   */\n\n\n  function Logger(options) {\n    var _this;\n\n    _classCallCheck(this, Logger);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Logger).call(this, {\n      objectMode: true\n    }));\n\n    _this.configure(options);\n\n    return _this;\n  }\n\n  _createClass(Logger, [{\n    key: \"child\",\n    value: function child(defaultRequestMetadata) {\n      var logger = this;\n      return Object.create(logger, {\n        write: {\n          value: function value(info) {\n            var infoClone = Object.assign({}, defaultRequestMetadata, info); // Object.assign doesn't copy inherited Error\n            // properties so we have to do that explicitly\n            //\n            // Remark (indexzero): we should remove this\n            // since the errors format will handle this case.\n            //\n\n            if (info instanceof Error) {\n              infoClone.stack = info.stack;\n              infoClone.message = info.message;\n            }\n\n            logger.write(infoClone);\n          }\n        }\n      });\n    }\n    /**\n     * This will wholesale reconfigure this instance by:\n     * 1. Resetting all transports. Older transports will be removed implicitly.\n     * 2. Set all other options including levels, colors, rewriters, filters,\n     *    exceptionHandlers, etc.\n     * @param {!Object} options - TODO: add param description.\n     * @returns {undefined}\n     */\n\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var _this2 = this;\n\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          silent = _ref.silent,\n          format = _ref.format,\n          defaultMeta = _ref.defaultMeta,\n          levels = _ref.levels,\n          _ref$level = _ref.level,\n          level = _ref$level === void 0 ? 'info' : _ref$level,\n          _ref$exitOnError = _ref.exitOnError,\n          exitOnError = _ref$exitOnError === void 0 ? true : _ref$exitOnError,\n          transports = _ref.transports,\n          colors = _ref.colors,\n          emitErrs = _ref.emitErrs,\n          formatters = _ref.formatters,\n          padLevels = _ref.padLevels,\n          rewriters = _ref.rewriters,\n          stripColors = _ref.stripColors,\n          exceptionHandlers = _ref.exceptionHandlers,\n          rejectionHandlers = _ref.rejectionHandlers; // Reset transports if we already have them\n\n\n      if (this.transports.length) {\n        this.clear();\n      }\n\n      this.silent = silent;\n      this.format = format || this.format || require('logform/json')();\n      this.defaultMeta = defaultMeta || null; // Hoist other options onto this instance.\n\n      this.levels = levels || this.levels || config.npm.levels;\n      this.level = level;\n      this.exceptions = new ExceptionHandler(this);\n      this.rejections = new RejectionHandler(this);\n      this.profilers = {};\n      this.exitOnError = exitOnError; // Add all transports we have been provided.\n\n      if (transports) {\n        transports = Array.isArray(transports) ? transports : [transports];\n        transports.forEach(function (transport) {\n          return _this2.add(transport);\n        });\n      }\n\n      if (colors || emitErrs || formatters || padLevels || rewriters || stripColors) {\n        throw new Error(['{ colors, emitErrs, formatters, padLevels, rewriters, stripColors } were removed in winston@3.0.0.', 'Use a custom winston.format(function) instead.', 'See: https://github.com/winstonjs/winston/tree/master/UPGRADE-3.0.md'].join('\\n'));\n      }\n\n      if (exceptionHandlers) {\n        this.exceptions.handle(exceptionHandlers);\n      }\n\n      if (rejectionHandlers) {\n        this.rejections.handle(rejectionHandlers);\n      }\n    }\n  }, {\n    key: \"isLevelEnabled\",\n    value: function isLevelEnabled(level) {\n      var _this3 = this;\n\n      var givenLevelValue = getLevelValue(this.levels, level);\n\n      if (givenLevelValue === null) {\n        return false;\n      }\n\n      var configuredLevelValue = getLevelValue(this.levels, this.level);\n\n      if (configuredLevelValue === null) {\n        return false;\n      }\n\n      if (!this.transports || this.transports.length === 0) {\n        return configuredLevelValue >= givenLevelValue;\n      }\n\n      var index = this.transports.findIndex(function (transport) {\n        var transportLevelValue = getLevelValue(_this3.levels, transport.level);\n\n        if (transportLevelValue === null) {\n          transportLevelValue = configuredLevelValue;\n        }\n\n        return transportLevelValue >= givenLevelValue;\n      });\n      return index !== -1;\n    }\n    /* eslint-disable valid-jsdoc */\n\n    /**\n     * Ensure backwards compatibility with a `log` method\n     * @param {mixed} level - Level the log message is written at.\n     * @param {mixed} msg - TODO: add param description.\n     * @param {mixed} meta - TODO: add param description.\n     * @returns {Logger} - TODO: add return description.\n     *\n     * @example\n     *    // Supports the existing API:\n     *    logger.log('info', 'Hello world', { custom: true });\n     *    logger.log('info', new Error('Yo, it\\'s on fire'));\n     *\n     *    // Requires winston.format.splat()\n     *    logger.log('info', '%s %d%%', 'A string', 50, { thisIsMeta: true });\n     *\n     *    // And the new API with a single JSON literal:\n     *    logger.log({ level: 'info', message: 'Hello world', custom: true });\n     *    logger.log({ level: 'info', message: new Error('Yo, it\\'s on fire') });\n     *\n     *    // Also requires winston.format.splat()\n     *    logger.log({\n     *      level: 'info',\n     *      message: '%s %d%%',\n     *      [SPLAT]: ['A string', 50],\n     *      meta: { thisIsMeta: true }\n     *    });\n     *\n     */\n\n    /* eslint-enable valid-jsdoc */\n\n  }, {\n    key: \"log\",\n    value: function log(level, msg) {\n      var _Object$assign2;\n\n      for (var _len = arguments.length, splat = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        splat[_key - 2] = arguments[_key];\n      } // eslint-disable-line max-params\n      // Optimize for the hotpath of logging JSON literals\n\n\n      if (arguments.length === 1) {\n        // Yo dawg, I heard you like levels ... seriously ...\n        // In this context the LHS `level` here is actually the `info` so read\n        // this as: info[LEVEL] = info.level;\n        level[LEVEL] = level.level;\n\n        this._addDefaultMeta(level);\n\n        this.write(level);\n        return this;\n      } // Slightly less hotpath, but worth optimizing for.\n\n\n      if (arguments.length === 2) {\n        var _this$write;\n\n        if (msg && _typeof(msg) === 'object') {\n          msg[LEVEL] = msg.level = level;\n\n          this._addDefaultMeta(msg);\n\n          this.write(msg);\n          return this;\n        }\n\n        this.write((_this$write = {}, _defineProperty(_this$write, LEVEL, level), _defineProperty(_this$write, \"level\", level), _defineProperty(_this$write, \"message\", msg), _this$write));\n        return this;\n      }\n\n      var meta = splat[0];\n\n      if (_typeof(meta) === 'object' && meta !== null) {\n        // Extract tokens, if none available default to empty array to\n        // ensure consistancy in expected results\n        var tokens = msg && msg.match && msg.match(formatRegExp);\n\n        if (!tokens) {\n          var _Object$assign;\n\n          var info = Object.assign({}, this.defaultMeta, meta, (_Object$assign = {}, _defineProperty(_Object$assign, LEVEL, level), _defineProperty(_Object$assign, SPLAT, splat), _defineProperty(_Object$assign, \"level\", level), _defineProperty(_Object$assign, \"message\", msg), _Object$assign));\n          if (meta.message) info.message += \"\".concat(meta.message);\n          if (meta.stack) info.stack = meta.stack;\n          this.write(info);\n          return this;\n        }\n      }\n\n      this.write(Object.assign({}, this.defaultMeta, (_Object$assign2 = {}, _defineProperty(_Object$assign2, LEVEL, level), _defineProperty(_Object$assign2, SPLAT, splat), _defineProperty(_Object$assign2, \"level\", level), _defineProperty(_Object$assign2, \"message\", msg), _Object$assign2)));\n      return this;\n    }\n    /**\n     * Pushes data so that it can be picked up by all of our pipe targets.\n     * @param {mixed} info - TODO: add param description.\n     * @param {mixed} enc - TODO: add param description.\n     * @param {mixed} callback - Continues stream processing.\n     * @returns {undefined}\n     * @private\n     */\n\n  }, {\n    key: \"_transform\",\n    value: function _transform(info, enc, callback) {\n      if (this.silent) {\n        return callback();\n      } // [LEVEL] is only soft guaranteed to be set here since we are a proper\n      // stream. It is likely that `info` came in through `.log(info)` or\n      // `.info(info)`. If it is not defined, however, define it.\n      // This LEVEL symbol is provided by `triple-beam` and also used in:\n      // - logform\n      // - winston-transport\n      // - abstract-winston-transport\n\n\n      if (!info[LEVEL]) {\n        info[LEVEL] = info.level;\n      } // Remark: really not sure what to do here, but this has been reported as\n      // very confusing by pre winston@2.0.0 users as quite confusing when using\n      // custom levels.\n\n\n      if (!this.levels[info[LEVEL]] && this.levels[info[LEVEL]] !== 0) {\n        // eslint-disable-next-line no-console\n        console.error('[winston] Unknown logger level: %s', info[LEVEL]);\n      } // Remark: not sure if we should simply error here.\n\n\n      if (!this._readableState.pipes) {\n        // eslint-disable-next-line no-console\n        console.error('[winston] Attempt to write logs with no transports %j', info);\n      } // Here we write to the `format` pipe-chain, which on `readable` above will\n      // push the formatted `info` Object onto the buffer for this instance. We trap\n      // (and re-throw) any errors generated by the user-provided format, but also\n      // guarantee that the streams callback is invoked so that we can continue flowing.\n\n\n      try {\n        this.push(this.format.transform(info, this.format.options));\n      } catch (ex) {\n        throw ex;\n      } finally {\n        // eslint-disable-next-line callback-return\n        callback();\n      }\n    }\n    /**\n     * Delays the 'finish' event until all transport pipe targets have\n     * also emitted 'finish' or are already finished.\n     * @param {mixed} callback - Continues stream processing.\n     */\n\n  }, {\n    key: \"_final\",\n    value: function _final(callback) {\n      var transports = this.transports.slice();\n      asyncForEach(transports, function (transport, next) {\n        if (!transport || transport.finished) return setImmediate(next);\n        transport.once('finish', next);\n        transport.end();\n      }, callback);\n    }\n    /**\n     * Adds the transport to this logger instance by piping to it.\n     * @param {mixed} transport - TODO: add param description.\n     * @returns {Logger} - TODO: add return description.\n     */\n\n  }, {\n    key: \"add\",\n    value: function add(transport) {\n      // Support backwards compatibility with all existing `winston < 3.x.x`\n      // transports which meet one of two criteria:\n      // 1. They inherit from winston.Transport in  < 3.x.x which is NOT a stream.\n      // 2. They expose a log method which has a length greater than 2 (i.e. more then\n      //    just `log(info, callback)`.\n      var target = !isStream(transport) || transport.log.length > 2 ? new LegacyTransportStream({\n        transport: transport\n      }) : transport;\n\n      if (!target._writableState || !target._writableState.objectMode) {\n        throw new Error('Transports must WritableStreams in objectMode. Set { objectMode: true }.');\n      } // Listen for the `error` event and the `warn` event on the new Transport.\n\n\n      this._onEvent('error', target);\n\n      this._onEvent('warn', target);\n\n      this.pipe(target);\n\n      if (transport.handleExceptions) {\n        this.exceptions.handle();\n      }\n\n      if (transport.handleRejections) {\n        this.rejections.handle();\n      }\n\n      return this;\n    }\n    /**\n     * Removes the transport from this logger instance by unpiping from it.\n     * @param {mixed} transport - TODO: add param description.\n     * @returns {Logger} - TODO: add return description.\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(transport) {\n      var target = transport;\n\n      if (!isStream(transport) || transport.log.length > 2) {\n        target = this.transports.filter(function (match) {\n          return match.transport === transport;\n        })[0];\n      }\n\n      if (target) {\n        this.unpipe(target);\n      }\n\n      return this;\n    }\n    /**\n     * Removes all transports from this logger instance.\n     * @returns {Logger} - TODO: add return description.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.unpipe();\n      return this;\n    }\n    /**\n     * Cleans up resources (streams, event listeners) for all transports\n     * associated with this instance (if necessary).\n     * @returns {Logger} - TODO: add return description.\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.clear();\n      this.emit('close');\n      return this;\n    }\n    /**\n     * Sets the `target` levels specified on this instance.\n     * @param {Object} Target levels to use on this instance.\n     */\n\n  }, {\n    key: \"setLevels\",\n    value: function setLevels() {\n      warn.deprecated('setLevels');\n    }\n    /**\n     * Queries the all transports for this instance with the specified `options`.\n     * This will aggregate each transport's results into one object containing\n     * a property per transport.\n     * @param {Object} options - Query options for this instance.\n     * @param {function} callback - Continuation to respond to when complete.\n     */\n\n  }, {\n    key: \"query\",\n    value: function query(options, callback) {\n      if (typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n\n      options = options || {};\n      var results = {};\n      var queryObject = Object.assign({}, options.query || {}); // Helper function to query a single transport\n\n      function queryTransport(transport, next) {\n        if (options.query && typeof transport.formatQuery === 'function') {\n          options.query = transport.formatQuery(queryObject);\n        }\n\n        transport.query(options, function (err, res) {\n          if (err) {\n            return next(err);\n          }\n\n          if (typeof transport.formatResults === 'function') {\n            res = transport.formatResults(res, options.format);\n          }\n\n          next(null, res);\n        });\n      } // Helper function to accumulate the results from `queryTransport` into\n      // the `results`.\n\n\n      function addResults(transport, next) {\n        queryTransport(transport, function (err, result) {\n          // queryTransport could potentially invoke the callback multiple times\n          // since Transport code can be unpredictable.\n          if (next) {\n            result = err || result;\n\n            if (result) {\n              results[transport.name] = result;\n            } // eslint-disable-next-line callback-return\n\n\n            next();\n          }\n\n          next = null;\n        });\n      } // Iterate over the transports in parallel setting the appropriate key in\n      // the `results`.\n\n\n      asyncForEach(this.transports.filter(function (transport) {\n        return !!transport.query;\n      }), addResults, function () {\n        return callback(null, results);\n      });\n    }\n    /**\n     * Returns a log stream for all transports. Options object is optional.\n     * @param{Object} options={} - Stream options for this instance.\n     * @returns {Stream} - TODO: add return description.\n     */\n\n  }, {\n    key: \"stream\",\n    value: function stream() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var out = new Stream();\n      var streams = [];\n      out._streams = streams;\n\n      out.destroy = function () {\n        var i = streams.length;\n\n        while (i--) {\n          streams[i].destroy();\n        }\n      }; // Create a list of all transports for this instance.\n\n\n      this.transports.filter(function (transport) {\n        return !!transport.stream;\n      }).forEach(function (transport) {\n        var str = transport.stream(options);\n\n        if (!str) {\n          return;\n        }\n\n        streams.push(str);\n        str.on('log', function (log) {\n          log.transport = log.transport || [];\n          log.transport.push(transport.name);\n          out.emit('log', log);\n        });\n        str.on('error', function (err) {\n          err.transport = err.transport || [];\n          err.transport.push(transport.name);\n          out.emit('error', err);\n        });\n      });\n      return out;\n    }\n    /**\n     * Returns an object corresponding to a specific timing. When done is called\n     * the timer will finish and log the duration. e.g.:\n     * @returns {Profile} - TODO: add return description.\n     * @example\n     *    const timer = winston.startTimer()\n     *    setTimeout(() => {\n     *      timer.done({\n     *        message: 'Logging message'\n     *      });\n     *    }, 1000);\n     */\n\n  }, {\n    key: \"startTimer\",\n    value: function startTimer() {\n      return new Profiler(this);\n    }\n    /**\n     * Tracks the time inbetween subsequent calls to this method with the same\n     * `id` parameter. The second call to this method will log the difference in\n     * milliseconds along with the message.\n     * @param {string} id Unique id of the profiler\n     * @returns {Logger} - TODO: add return description.\n     */\n\n  }, {\n    key: \"profile\",\n    value: function profile(id) {\n      var time = Date.now();\n\n      if (this.profilers[id]) {\n        var timeEnd = this.profilers[id];\n        delete this.profilers[id]; // Attempt to be kind to users if they are still using older APIs.\n\n        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n\n        if (typeof args[args.length - 2] === 'function') {\n          // eslint-disable-next-line no-console\n          console.warn('Callback function no longer supported as of winston@3.0.0');\n          args.pop();\n        } // Set the duration property of the metadata\n\n\n        var info = _typeof(args[args.length - 1]) === 'object' ? args.pop() : {};\n        info.level = info.level || 'info';\n        info.durationMs = time - timeEnd;\n        info.message = info.message || id;\n        return this.write(info);\n      }\n\n      this.profilers[id] = time;\n      return this;\n    }\n    /**\n     * Backwards compatibility to `exceptions.handle` in winston < 3.0.0.\n     * @returns {undefined}\n     * @deprecated\n     */\n\n  }, {\n    key: \"handleExceptions\",\n    value: function handleExceptions() {\n      var _this$exceptions; // eslint-disable-next-line no-console\n\n\n      console.warn('Deprecated: .handleExceptions() will be removed in winston@4. Use .exceptions.handle()');\n\n      (_this$exceptions = this.exceptions).handle.apply(_this$exceptions, arguments);\n    }\n    /**\n     * Backwards compatibility to `exceptions.handle` in winston < 3.0.0.\n     * @returns {undefined}\n     * @deprecated\n     */\n\n  }, {\n    key: \"unhandleExceptions\",\n    value: function unhandleExceptions() {\n      var _this$exceptions2; // eslint-disable-next-line no-console\n\n\n      console.warn('Deprecated: .unhandleExceptions() will be removed in winston@4. Use .exceptions.unhandle()');\n\n      (_this$exceptions2 = this.exceptions).unhandle.apply(_this$exceptions2, arguments);\n    }\n    /**\n     * Throw a more meaningful deprecation notice\n     * @throws {Error} - TODO: add throws description.\n     */\n\n  }, {\n    key: \"cli\",\n    value: function cli() {\n      throw new Error(['Logger.cli() was removed in winston@3.0.0', 'Use a custom winston.formats.cli() instead.', 'See: https://github.com/winstonjs/winston/tree/master/UPGRADE-3.0.md'].join('\\n'));\n    }\n    /**\n     * Bubbles the `event` that occured on the specified `transport` up\n     * from this instance.\n     * @param {string} event - The event that occured\n     * @param {Object} transport - Transport on which the event occured\n     * @private\n     */\n\n  }, {\n    key: \"_onEvent\",\n    value: function _onEvent(event, transport) {\n      function transportEvent(err) {\n        this.emit(event, err, transport);\n      }\n\n      if (!transport['__winston' + event]) {\n        transport['__winston' + event] = transportEvent.bind(this);\n        transport.on(event, transport['__winston' + event]);\n      }\n    }\n  }, {\n    key: \"_addDefaultMeta\",\n    value: function _addDefaultMeta(msg) {\n      if (this.defaultMeta) {\n        Object.assign(msg, this.defaultMeta);\n      }\n    }\n  }]);\n\n  return Logger;\n}(Transform);\n\nfunction getLevelValue(levels, level) {\n  var value = levels[level];\n\n  if (!value && value !== 0) {\n    return null;\n  }\n\n  return value;\n}\n/**\n * Represents the current readableState pipe targets for this Logger instance.\n * @type {Array|Object}\n */\n\n\nObject.defineProperty(Logger.prototype, 'transports', {\n  configurable: false,\n  enumerable: true,\n  get: function get() {\n    var pipes = this._readableState.pipes;\n    return !Array.isArray(pipes) ? [pipes].filter(Boolean) : pipes;\n  }\n});\nmodule.exports = Logger;","map":{"version":3,"sources":["/Users/steinkorsveien/Development/SpringBotTest/RestTutorial/frontend/node_modules/winston/dist/winston/logger.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_typeof","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","_createClass","protoProps","staticProps","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","create","_setPrototypeOf","p","_require","require","Stream","Transform","asyncForEach","_require2","LEVEL","SPLAT","isStream","ExceptionHandler","RejectionHandler","LegacyTransportStream","Profiler","_require3","warn","config","formatRegExp","Logger","_Transform","options","_this","objectMode","configure","child","defaultRequestMetadata","logger","write","info","infoClone","assign","Error","stack","message","_this2","_ref","arguments","undefined","silent","format","defaultMeta","levels","_ref$level","level","_ref$exitOnError","exitOnError","transports","colors","emitErrs","formatters","padLevels","rewriters","stripColors","exceptionHandlers","rejectionHandlers","clear","npm","exceptions","rejections","profilers","Array","isArray","forEach","transport","add","join","handle","isLevelEnabled","_this3","givenLevelValue","getLevelValue","configuredLevelValue","index","findIndex","transportLevelValue","log","msg","_Object$assign2","_len","splat","_key","_addDefaultMeta","_this$write","meta","tokens","match","_Object$assign","concat","_transform","enc","callback","console","error","_readableState","pipes","push","transform","ex","_final","slice","next","finished","setImmediate","once","end","_writableState","_onEvent","pipe","handleExceptions","handleRejections","remove","filter","unpipe","close","emit","setLevels","deprecated","query","results","queryObject","queryTransport","formatQuery","err","res","formatResults","addResults","result","name","stream","out","streams","_streams","destroy","str","on","startTimer","profile","id","time","Date","now","timeEnd","_len2","args","_key2","pop","durationMs","_this$exceptions","apply","unhandleExceptions","_this$exceptions2","unhandle","cli","event","transportEvent","bind","get","Boolean","module","exports"],"mappings":"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","sourcesContent":["/**\n * logger.js: TODO: add file header description.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n'use strict';\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar _require = require('readable-stream'),\n    Stream = _require.Stream,\n    Transform = _require.Transform;\n\nvar asyncForEach = require('async/forEach');\n\nvar _require2 = require('triple-beam'),\n    LEVEL = _require2.LEVEL,\n    SPLAT = _require2.SPLAT;\n\nvar isStream = require('is-stream');\n\nvar ExceptionHandler = require('./exception-handler');\n\nvar RejectionHandler = require('./rejection-handler');\n\nvar LegacyTransportStream = require('winston-transport/legacy');\n\nvar Profiler = require('./profiler');\n\nvar _require3 = require('./common'),\n    warn = _require3.warn;\n\nvar config = require('./config');\n/**\n * Captures the number of format (i.e. %s strings) in a given string.\n * Based on `util.format`, see Node.js source:\n * https://github.com/nodejs/node/blob/b1c8f15c5f169e021f7c46eb7b219de95fe97603/lib/util.js#L201-L230\n * @type {RegExp}\n */\n\n\nvar formatRegExp = /%[scdjifoO%]/g;\n/**\n * TODO: add class description.\n * @type {Logger}\n * @extends {Transform}\n */\n\nvar Logger =\n/*#__PURE__*/\nfunction (_Transform) {\n  _inherits(Logger, _Transform);\n\n  /**\n   * Constructor function for the Logger object responsible for persisting log\n   * messages and metadata to one or more transports.\n   * @param {!Object} options - foo\n   */\n  function Logger(options) {\n    var _this;\n\n    _classCallCheck(this, Logger);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Logger).call(this, {\n      objectMode: true\n    }));\n\n    _this.configure(options);\n\n    return _this;\n  }\n\n  _createClass(Logger, [{\n    key: \"child\",\n    value: function child(defaultRequestMetadata) {\n      var logger = this;\n      return Object.create(logger, {\n        write: {\n          value: function value(info) {\n            var infoClone = Object.assign({}, defaultRequestMetadata, info); // Object.assign doesn't copy inherited Error\n            // properties so we have to do that explicitly\n            //\n            // Remark (indexzero): we should remove this\n            // since the errors format will handle this case.\n            //\n\n            if (info instanceof Error) {\n              infoClone.stack = info.stack;\n              infoClone.message = info.message;\n            }\n\n            logger.write(infoClone);\n          }\n        }\n      });\n    }\n    /**\n     * This will wholesale reconfigure this instance by:\n     * 1. Resetting all transports. Older transports will be removed implicitly.\n     * 2. Set all other options including levels, colors, rewriters, filters,\n     *    exceptionHandlers, etc.\n     * @param {!Object} options - TODO: add param description.\n     * @returns {undefined}\n     */\n\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var _this2 = this;\n\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          silent = _ref.silent,\n          format = _ref.format,\n          defaultMeta = _ref.defaultMeta,\n          levels = _ref.levels,\n          _ref$level = _ref.level,\n          level = _ref$level === void 0 ? 'info' : _ref$level,\n          _ref$exitOnError = _ref.exitOnError,\n          exitOnError = _ref$exitOnError === void 0 ? true : _ref$exitOnError,\n          transports = _ref.transports,\n          colors = _ref.colors,\n          emitErrs = _ref.emitErrs,\n          formatters = _ref.formatters,\n          padLevels = _ref.padLevels,\n          rewriters = _ref.rewriters,\n          stripColors = _ref.stripColors,\n          exceptionHandlers = _ref.exceptionHandlers,\n          rejectionHandlers = _ref.rejectionHandlers;\n\n      // Reset transports if we already have them\n      if (this.transports.length) {\n        this.clear();\n      }\n\n      this.silent = silent;\n      this.format = format || this.format || require('logform/json')();\n      this.defaultMeta = defaultMeta || null; // Hoist other options onto this instance.\n\n      this.levels = levels || this.levels || config.npm.levels;\n      this.level = level;\n      this.exceptions = new ExceptionHandler(this);\n      this.rejections = new RejectionHandler(this);\n      this.profilers = {};\n      this.exitOnError = exitOnError; // Add all transports we have been provided.\n\n      if (transports) {\n        transports = Array.isArray(transports) ? transports : [transports];\n        transports.forEach(function (transport) {\n          return _this2.add(transport);\n        });\n      }\n\n      if (colors || emitErrs || formatters || padLevels || rewriters || stripColors) {\n        throw new Error(['{ colors, emitErrs, formatters, padLevels, rewriters, stripColors } were removed in winston@3.0.0.', 'Use a custom winston.format(function) instead.', 'See: https://github.com/winstonjs/winston/tree/master/UPGRADE-3.0.md'].join('\\n'));\n      }\n\n      if (exceptionHandlers) {\n        this.exceptions.handle(exceptionHandlers);\n      }\n\n      if (rejectionHandlers) {\n        this.rejections.handle(rejectionHandlers);\n      }\n    }\n  }, {\n    key: \"isLevelEnabled\",\n    value: function isLevelEnabled(level) {\n      var _this3 = this;\n\n      var givenLevelValue = getLevelValue(this.levels, level);\n\n      if (givenLevelValue === null) {\n        return false;\n      }\n\n      var configuredLevelValue = getLevelValue(this.levels, this.level);\n\n      if (configuredLevelValue === null) {\n        return false;\n      }\n\n      if (!this.transports || this.transports.length === 0) {\n        return configuredLevelValue >= givenLevelValue;\n      }\n\n      var index = this.transports.findIndex(function (transport) {\n        var transportLevelValue = getLevelValue(_this3.levels, transport.level);\n\n        if (transportLevelValue === null) {\n          transportLevelValue = configuredLevelValue;\n        }\n\n        return transportLevelValue >= givenLevelValue;\n      });\n      return index !== -1;\n    }\n    /* eslint-disable valid-jsdoc */\n\n    /**\n     * Ensure backwards compatibility with a `log` method\n     * @param {mixed} level - Level the log message is written at.\n     * @param {mixed} msg - TODO: add param description.\n     * @param {mixed} meta - TODO: add param description.\n     * @returns {Logger} - TODO: add return description.\n     *\n     * @example\n     *    // Supports the existing API:\n     *    logger.log('info', 'Hello world', { custom: true });\n     *    logger.log('info', new Error('Yo, it\\'s on fire'));\n     *\n     *    // Requires winston.format.splat()\n     *    logger.log('info', '%s %d%%', 'A string', 50, { thisIsMeta: true });\n     *\n     *    // And the new API with a single JSON literal:\n     *    logger.log({ level: 'info', message: 'Hello world', custom: true });\n     *    logger.log({ level: 'info', message: new Error('Yo, it\\'s on fire') });\n     *\n     *    // Also requires winston.format.splat()\n     *    logger.log({\n     *      level: 'info',\n     *      message: '%s %d%%',\n     *      [SPLAT]: ['A string', 50],\n     *      meta: { thisIsMeta: true }\n     *    });\n     *\n     */\n\n    /* eslint-enable valid-jsdoc */\n\n  }, {\n    key: \"log\",\n    value: function log(level, msg) {\n      var _Object$assign2;\n\n      for (var _len = arguments.length, splat = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        splat[_key - 2] = arguments[_key];\n      }\n\n      // eslint-disable-line max-params\n      // Optimize for the hotpath of logging JSON literals\n      if (arguments.length === 1) {\n        // Yo dawg, I heard you like levels ... seriously ...\n        // In this context the LHS `level` here is actually the `info` so read\n        // this as: info[LEVEL] = info.level;\n        level[LEVEL] = level.level;\n\n        this._addDefaultMeta(level);\n\n        this.write(level);\n        return this;\n      } // Slightly less hotpath, but worth optimizing for.\n\n\n      if (arguments.length === 2) {\n        var _this$write;\n\n        if (msg && _typeof(msg) === 'object') {\n          msg[LEVEL] = msg.level = level;\n\n          this._addDefaultMeta(msg);\n\n          this.write(msg);\n          return this;\n        }\n\n        this.write((_this$write = {}, _defineProperty(_this$write, LEVEL, level), _defineProperty(_this$write, \"level\", level), _defineProperty(_this$write, \"message\", msg), _this$write));\n        return this;\n      }\n\n      var meta = splat[0];\n\n      if (_typeof(meta) === 'object' && meta !== null) {\n        // Extract tokens, if none available default to empty array to\n        // ensure consistancy in expected results\n        var tokens = msg && msg.match && msg.match(formatRegExp);\n\n        if (!tokens) {\n          var _Object$assign;\n\n          var info = Object.assign({}, this.defaultMeta, meta, (_Object$assign = {}, _defineProperty(_Object$assign, LEVEL, level), _defineProperty(_Object$assign, SPLAT, splat), _defineProperty(_Object$assign, \"level\", level), _defineProperty(_Object$assign, \"message\", msg), _Object$assign));\n          if (meta.message) info.message += \"\".concat(meta.message);\n          if (meta.stack) info.stack = meta.stack;\n          this.write(info);\n          return this;\n        }\n      }\n\n      this.write(Object.assign({}, this.defaultMeta, (_Object$assign2 = {}, _defineProperty(_Object$assign2, LEVEL, level), _defineProperty(_Object$assign2, SPLAT, splat), _defineProperty(_Object$assign2, \"level\", level), _defineProperty(_Object$assign2, \"message\", msg), _Object$assign2)));\n      return this;\n    }\n    /**\n     * Pushes data so that it can be picked up by all of our pipe targets.\n     * @param {mixed} info - TODO: add param description.\n     * @param {mixed} enc - TODO: add param description.\n     * @param {mixed} callback - Continues stream processing.\n     * @returns {undefined}\n     * @private\n     */\n\n  }, {\n    key: \"_transform\",\n    value: function _transform(info, enc, callback) {\n      if (this.silent) {\n        return callback();\n      } // [LEVEL] is only soft guaranteed to be set here since we are a proper\n      // stream. It is likely that `info` came in through `.log(info)` or\n      // `.info(info)`. If it is not defined, however, define it.\n      // This LEVEL symbol is provided by `triple-beam` and also used in:\n      // - logform\n      // - winston-transport\n      // - abstract-winston-transport\n\n\n      if (!info[LEVEL]) {\n        info[LEVEL] = info.level;\n      } // Remark: really not sure what to do here, but this has been reported as\n      // very confusing by pre winston@2.0.0 users as quite confusing when using\n      // custom levels.\n\n\n      if (!this.levels[info[LEVEL]] && this.levels[info[LEVEL]] !== 0) {\n        // eslint-disable-next-line no-console\n        console.error('[winston] Unknown logger level: %s', info[LEVEL]);\n      } // Remark: not sure if we should simply error here.\n\n\n      if (!this._readableState.pipes) {\n        // eslint-disable-next-line no-console\n        console.error('[winston] Attempt to write logs with no transports %j', info);\n      } // Here we write to the `format` pipe-chain, which on `readable` above will\n      // push the formatted `info` Object onto the buffer for this instance. We trap\n      // (and re-throw) any errors generated by the user-provided format, but also\n      // guarantee that the streams callback is invoked so that we can continue flowing.\n\n\n      try {\n        this.push(this.format.transform(info, this.format.options));\n      } catch (ex) {\n        throw ex;\n      } finally {\n        // eslint-disable-next-line callback-return\n        callback();\n      }\n    }\n    /**\n     * Delays the 'finish' event until all transport pipe targets have\n     * also emitted 'finish' or are already finished.\n     * @param {mixed} callback - Continues stream processing.\n     */\n\n  }, {\n    key: \"_final\",\n    value: function _final(callback) {\n      var transports = this.transports.slice();\n      asyncForEach(transports, function (transport, next) {\n        if (!transport || transport.finished) return setImmediate(next);\n        transport.once('finish', next);\n        transport.end();\n      }, callback);\n    }\n    /**\n     * Adds the transport to this logger instance by piping to it.\n     * @param {mixed} transport - TODO: add param description.\n     * @returns {Logger} - TODO: add return description.\n     */\n\n  }, {\n    key: \"add\",\n    value: function add(transport) {\n      // Support backwards compatibility with all existing `winston < 3.x.x`\n      // transports which meet one of two criteria:\n      // 1. They inherit from winston.Transport in  < 3.x.x which is NOT a stream.\n      // 2. They expose a log method which has a length greater than 2 (i.e. more then\n      //    just `log(info, callback)`.\n      var target = !isStream(transport) || transport.log.length > 2 ? new LegacyTransportStream({\n        transport: transport\n      }) : transport;\n\n      if (!target._writableState || !target._writableState.objectMode) {\n        throw new Error('Transports must WritableStreams in objectMode. Set { objectMode: true }.');\n      } // Listen for the `error` event and the `warn` event on the new Transport.\n\n\n      this._onEvent('error', target);\n\n      this._onEvent('warn', target);\n\n      this.pipe(target);\n\n      if (transport.handleExceptions) {\n        this.exceptions.handle();\n      }\n\n      if (transport.handleRejections) {\n        this.rejections.handle();\n      }\n\n      return this;\n    }\n    /**\n     * Removes the transport from this logger instance by unpiping from it.\n     * @param {mixed} transport - TODO: add param description.\n     * @returns {Logger} - TODO: add return description.\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(transport) {\n      var target = transport;\n\n      if (!isStream(transport) || transport.log.length > 2) {\n        target = this.transports.filter(function (match) {\n          return match.transport === transport;\n        })[0];\n      }\n\n      if (target) {\n        this.unpipe(target);\n      }\n\n      return this;\n    }\n    /**\n     * Removes all transports from this logger instance.\n     * @returns {Logger} - TODO: add return description.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.unpipe();\n      return this;\n    }\n    /**\n     * Cleans up resources (streams, event listeners) for all transports\n     * associated with this instance (if necessary).\n     * @returns {Logger} - TODO: add return description.\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.clear();\n      this.emit('close');\n      return this;\n    }\n    /**\n     * Sets the `target` levels specified on this instance.\n     * @param {Object} Target levels to use on this instance.\n     */\n\n  }, {\n    key: \"setLevels\",\n    value: function setLevels() {\n      warn.deprecated('setLevels');\n    }\n    /**\n     * Queries the all transports for this instance with the specified `options`.\n     * This will aggregate each transport's results into one object containing\n     * a property per transport.\n     * @param {Object} options - Query options for this instance.\n     * @param {function} callback - Continuation to respond to when complete.\n     */\n\n  }, {\n    key: \"query\",\n    value: function query(options, callback) {\n      if (typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n\n      options = options || {};\n      var results = {};\n      var queryObject = Object.assign({}, options.query || {}); // Helper function to query a single transport\n\n      function queryTransport(transport, next) {\n        if (options.query && typeof transport.formatQuery === 'function') {\n          options.query = transport.formatQuery(queryObject);\n        }\n\n        transport.query(options, function (err, res) {\n          if (err) {\n            return next(err);\n          }\n\n          if (typeof transport.formatResults === 'function') {\n            res = transport.formatResults(res, options.format);\n          }\n\n          next(null, res);\n        });\n      } // Helper function to accumulate the results from `queryTransport` into\n      // the `results`.\n\n\n      function addResults(transport, next) {\n        queryTransport(transport, function (err, result) {\n          // queryTransport could potentially invoke the callback multiple times\n          // since Transport code can be unpredictable.\n          if (next) {\n            result = err || result;\n\n            if (result) {\n              results[transport.name] = result;\n            } // eslint-disable-next-line callback-return\n\n\n            next();\n          }\n\n          next = null;\n        });\n      } // Iterate over the transports in parallel setting the appropriate key in\n      // the `results`.\n\n\n      asyncForEach(this.transports.filter(function (transport) {\n        return !!transport.query;\n      }), addResults, function () {\n        return callback(null, results);\n      });\n    }\n    /**\n     * Returns a log stream for all transports. Options object is optional.\n     * @param{Object} options={} - Stream options for this instance.\n     * @returns {Stream} - TODO: add return description.\n     */\n\n  }, {\n    key: \"stream\",\n    value: function stream() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var out = new Stream();\n      var streams = [];\n      out._streams = streams;\n\n      out.destroy = function () {\n        var i = streams.length;\n\n        while (i--) {\n          streams[i].destroy();\n        }\n      }; // Create a list of all transports for this instance.\n\n\n      this.transports.filter(function (transport) {\n        return !!transport.stream;\n      }).forEach(function (transport) {\n        var str = transport.stream(options);\n\n        if (!str) {\n          return;\n        }\n\n        streams.push(str);\n        str.on('log', function (log) {\n          log.transport = log.transport || [];\n          log.transport.push(transport.name);\n          out.emit('log', log);\n        });\n        str.on('error', function (err) {\n          err.transport = err.transport || [];\n          err.transport.push(transport.name);\n          out.emit('error', err);\n        });\n      });\n      return out;\n    }\n    /**\n     * Returns an object corresponding to a specific timing. When done is called\n     * the timer will finish and log the duration. e.g.:\n     * @returns {Profile} - TODO: add return description.\n     * @example\n     *    const timer = winston.startTimer()\n     *    setTimeout(() => {\n     *      timer.done({\n     *        message: 'Logging message'\n     *      });\n     *    }, 1000);\n     */\n\n  }, {\n    key: \"startTimer\",\n    value: function startTimer() {\n      return new Profiler(this);\n    }\n    /**\n     * Tracks the time inbetween subsequent calls to this method with the same\n     * `id` parameter. The second call to this method will log the difference in\n     * milliseconds along with the message.\n     * @param {string} id Unique id of the profiler\n     * @returns {Logger} - TODO: add return description.\n     */\n\n  }, {\n    key: \"profile\",\n    value: function profile(id) {\n      var time = Date.now();\n\n      if (this.profilers[id]) {\n        var timeEnd = this.profilers[id];\n        delete this.profilers[id]; // Attempt to be kind to users if they are still using older APIs.\n\n        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n\n        if (typeof args[args.length - 2] === 'function') {\n          // eslint-disable-next-line no-console\n          console.warn('Callback function no longer supported as of winston@3.0.0');\n          args.pop();\n        } // Set the duration property of the metadata\n\n\n        var info = _typeof(args[args.length - 1]) === 'object' ? args.pop() : {};\n        info.level = info.level || 'info';\n        info.durationMs = time - timeEnd;\n        info.message = info.message || id;\n        return this.write(info);\n      }\n\n      this.profilers[id] = time;\n      return this;\n    }\n    /**\n     * Backwards compatibility to `exceptions.handle` in winston < 3.0.0.\n     * @returns {undefined}\n     * @deprecated\n     */\n\n  }, {\n    key: \"handleExceptions\",\n    value: function handleExceptions() {\n      var _this$exceptions;\n\n      // eslint-disable-next-line no-console\n      console.warn('Deprecated: .handleExceptions() will be removed in winston@4. Use .exceptions.handle()');\n\n      (_this$exceptions = this.exceptions).handle.apply(_this$exceptions, arguments);\n    }\n    /**\n     * Backwards compatibility to `exceptions.handle` in winston < 3.0.0.\n     * @returns {undefined}\n     * @deprecated\n     */\n\n  }, {\n    key: \"unhandleExceptions\",\n    value: function unhandleExceptions() {\n      var _this$exceptions2;\n\n      // eslint-disable-next-line no-console\n      console.warn('Deprecated: .unhandleExceptions() will be removed in winston@4. Use .exceptions.unhandle()');\n\n      (_this$exceptions2 = this.exceptions).unhandle.apply(_this$exceptions2, arguments);\n    }\n    /**\n     * Throw a more meaningful deprecation notice\n     * @throws {Error} - TODO: add throws description.\n     */\n\n  }, {\n    key: \"cli\",\n    value: function cli() {\n      throw new Error(['Logger.cli() was removed in winston@3.0.0', 'Use a custom winston.formats.cli() instead.', 'See: https://github.com/winstonjs/winston/tree/master/UPGRADE-3.0.md'].join('\\n'));\n    }\n    /**\n     * Bubbles the `event` that occured on the specified `transport` up\n     * from this instance.\n     * @param {string} event - The event that occured\n     * @param {Object} transport - Transport on which the event occured\n     * @private\n     */\n\n  }, {\n    key: \"_onEvent\",\n    value: function _onEvent(event, transport) {\n      function transportEvent(err) {\n        this.emit(event, err, transport);\n      }\n\n      if (!transport['__winston' + event]) {\n        transport['__winston' + event] = transportEvent.bind(this);\n        transport.on(event, transport['__winston' + event]);\n      }\n    }\n  }, {\n    key: \"_addDefaultMeta\",\n    value: function _addDefaultMeta(msg) {\n      if (this.defaultMeta) {\n        Object.assign(msg, this.defaultMeta);\n      }\n    }\n  }]);\n\n  return Logger;\n}(Transform);\n\nfunction getLevelValue(levels, level) {\n  var value = levels[level];\n\n  if (!value && value !== 0) {\n    return null;\n  }\n\n  return value;\n}\n/**\n * Represents the current readableState pipe targets for this Logger instance.\n * @type {Array|Object}\n */\n\n\nObject.defineProperty(Logger.prototype, 'transports', {\n  configurable: false,\n  enumerable: true,\n  get: function get() {\n    var pipes = this._readableState.pipes;\n    return !Array.isArray(pipes) ? [pipes].filter(Boolean) : pipes;\n  }\n});\nmodule.exports = Logger;"]},"metadata":{},"sourceType":"script"}