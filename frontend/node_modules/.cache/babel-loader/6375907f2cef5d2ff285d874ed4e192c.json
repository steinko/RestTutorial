{"ast":null,"code":"/**\n * http.js: Transport for outputting to a json-rpcserver.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n'use strict';\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar http = require('http');\n\nvar https = require('https');\n\nvar _require = require('readable-stream'),\n    Stream = _require.Stream;\n\nvar TransportStream = require('winston-transport');\n/**\n * Transport for outputting to a json-rpc server.\n * @type {Stream}\n * @extends {TransportStream}\n */\n\n\nmodule.exports =\n/*#__PURE__*/\nfunction (_TransportStream) {\n  _inherits(Http, _TransportStream);\n  /**\n   * Constructor function for the Http transport object responsible for\n   * persisting log messages and metadata to a terminal or TTY.\n   * @param {!Object} [options={}] - Options for this instance.\n   */\n\n\n  function Http() {\n    var _this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Http);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Http).call(this, options));\n    _this.name = options.name || 'http';\n    _this.ssl = !!options.ssl;\n    _this.host = options.host || 'localhost';\n    _this.port = options.port;\n    _this.auth = options.auth;\n    _this.path = options.path || '';\n    _this.agent = options.agent;\n    _this.headers = options.headers || {};\n    _this.headers['content-type'] = 'application/json';\n\n    if (!_this.port) {\n      _this.port = _this.ssl ? 443 : 80;\n    }\n\n    return _this;\n  }\n  /**\n   * Core logging method exposed to Winston.\n   * @param {Object} info - TODO: add param description.\n   * @param {function} callback - TODO: add param description.\n   * @returns {undefined}\n   */\n\n\n  _createClass(Http, [{\n    key: \"log\",\n    value: function log(info, callback) {\n      var _this2 = this;\n\n      this._request(info, function (err, res) {\n        if (res && res.statusCode !== 200) {\n          err = new Error(\"Invalid HTTP Status Code: \".concat(res.statusCode));\n        }\n\n        if (err) {\n          _this2.emit('warn', err);\n        } else {\n          _this2.emit('logged', info);\n        }\n      }); // Remark: (jcrugzz) Fire and forget here so requests dont cause buffering\n      // and block more requests from happening?\n\n\n      if (callback) {\n        setImmediate(callback);\n      }\n    }\n    /**\n     * Query the transport. Options object is optional.\n     * @param {Object} options -  Loggly-like query options for this instance.\n     * @param {function} callback - Continuation to respond to when complete.\n     * @returns {undefined}\n     */\n\n  }, {\n    key: \"query\",\n    value: function query(options, callback) {\n      if (typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n\n      options = {\n        method: 'query',\n        params: this.normalizeQuery(options)\n      };\n\n      if (options.params.path) {\n        options.path = options.params.path;\n        delete options.params.path;\n      }\n\n      if (options.params.auth) {\n        options.auth = options.params.auth;\n        delete options.params.auth;\n      }\n\n      this._request(options, function (err, res, body) {\n        if (res && res.statusCode !== 200) {\n          err = new Error(\"Invalid HTTP Status Code: \".concat(res.statusCode));\n        }\n\n        if (err) {\n          return callback(err);\n        }\n\n        if (typeof body === 'string') {\n          try {\n            body = JSON.parse(body);\n          } catch (e) {\n            return callback(e);\n          }\n        }\n\n        callback(null, body);\n      });\n    }\n    /**\n     * Returns a log stream for this transport. Options object is optional.\n     * @param {Object} options - Stream options for this instance.\n     * @returns {Stream} - TODO: add return description\n     */\n\n  }, {\n    key: \"stream\",\n    value: function stream() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var stream = new Stream();\n      options = {\n        method: 'stream',\n        params: options\n      };\n\n      if (options.params.path) {\n        options.path = options.params.path;\n        delete options.params.path;\n      }\n\n      if (options.params.auth) {\n        options.auth = options.params.auth;\n        delete options.params.auth;\n      }\n\n      var buff = '';\n\n      var req = this._request(options);\n\n      stream.destroy = function () {\n        return req.destroy();\n      };\n\n      req.on('data', function (data) {\n        data = (buff + data).split(/\\n+/);\n        var l = data.length - 1;\n        var i = 0;\n\n        for (; i < l; i++) {\n          try {\n            stream.emit('log', JSON.parse(data[i]));\n          } catch (e) {\n            stream.emit('error', e);\n          }\n        }\n\n        buff = data[l];\n      });\n      req.on('error', function (err) {\n        return stream.emit('error', err);\n      });\n      return stream;\n    }\n    /**\n     * Make a request to a winstond server or any http server which can\n     * handle json-rpc.\n     * @param {function} options - Options to sent the request.\n     * @param {function} callback - Continuation to respond to when complete.\n     */\n\n  }, {\n    key: \"_request\",\n    value: function _request(options, callback) {\n      options = options || {};\n      var auth = options.auth || this.auth;\n      var path = options.path || this.path || '';\n      delete options.auth;\n      delete options.path; // Prepare options for outgoing HTTP request\n\n      var req = (this.ssl ? https : http).request({\n        method: 'POST',\n        host: this.host,\n        port: this.port,\n        path: \"/\".concat(path.replace(/^\\//, '')),\n        headers: this.headers,\n        auth: auth ? \"\".concat(auth.username, \":\").concat(auth.password) : '',\n        agent: this.agent\n      });\n      req.on('error', callback);\n      req.on('response', function (res) {\n        return res.on('end', function () {\n          return callback(null, res);\n        }).resume();\n      });\n      req.end(Buffer.from(JSON.stringify(options), 'utf8'));\n    }\n  }]);\n\n  return Http;\n}(TransportStream);","map":{"version":3,"sources":["/Users/steinkorsveien/Development/SpringBotTest/RestTutorial/frontend/node_modules/winston/dist/winston/transports/http.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","create","value","_setPrototypeOf","p","http","require","https","_require","Stream","TransportStream","module","exports","_TransportStream","Http","_this","options","arguments","undefined","name","ssl","host","port","auth","path","agent","headers","log","info","callback","_this2","_request","err","res","statusCode","Error","concat","emit","setImmediate","query","method","params","normalizeQuery","body","JSON","parse","e","stream","buff","req","destroy","on","data","split","l","request","replace","username","password","resume","end","Buffer","from","stringify"],"mappings":"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","sourcesContent":["/**\n * http.js: Transport for outputting to a json-rpcserver.\n *\n * (C) 2010 Charlie Robbins\n * MIT LICENCE\n */\n'use strict';\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar http = require('http');\n\nvar https = require('https');\n\nvar _require = require('readable-stream'),\n    Stream = _require.Stream;\n\nvar TransportStream = require('winston-transport');\n/**\n * Transport for outputting to a json-rpc server.\n * @type {Stream}\n * @extends {TransportStream}\n */\n\n\nmodule.exports =\n/*#__PURE__*/\nfunction (_TransportStream) {\n  _inherits(Http, _TransportStream);\n\n  /**\n   * Constructor function for the Http transport object responsible for\n   * persisting log messages and metadata to a terminal or TTY.\n   * @param {!Object} [options={}] - Options for this instance.\n   */\n  function Http() {\n    var _this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Http);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Http).call(this, options));\n    _this.name = options.name || 'http';\n    _this.ssl = !!options.ssl;\n    _this.host = options.host || 'localhost';\n    _this.port = options.port;\n    _this.auth = options.auth;\n    _this.path = options.path || '';\n    _this.agent = options.agent;\n    _this.headers = options.headers || {};\n    _this.headers['content-type'] = 'application/json';\n\n    if (!_this.port) {\n      _this.port = _this.ssl ? 443 : 80;\n    }\n\n    return _this;\n  }\n  /**\n   * Core logging method exposed to Winston.\n   * @param {Object} info - TODO: add param description.\n   * @param {function} callback - TODO: add param description.\n   * @returns {undefined}\n   */\n\n\n  _createClass(Http, [{\n    key: \"log\",\n    value: function log(info, callback) {\n      var _this2 = this;\n\n      this._request(info, function (err, res) {\n        if (res && res.statusCode !== 200) {\n          err = new Error(\"Invalid HTTP Status Code: \".concat(res.statusCode));\n        }\n\n        if (err) {\n          _this2.emit('warn', err);\n        } else {\n          _this2.emit('logged', info);\n        }\n      }); // Remark: (jcrugzz) Fire and forget here so requests dont cause buffering\n      // and block more requests from happening?\n\n\n      if (callback) {\n        setImmediate(callback);\n      }\n    }\n    /**\n     * Query the transport. Options object is optional.\n     * @param {Object} options -  Loggly-like query options for this instance.\n     * @param {function} callback - Continuation to respond to when complete.\n     * @returns {undefined}\n     */\n\n  }, {\n    key: \"query\",\n    value: function query(options, callback) {\n      if (typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n\n      options = {\n        method: 'query',\n        params: this.normalizeQuery(options)\n      };\n\n      if (options.params.path) {\n        options.path = options.params.path;\n        delete options.params.path;\n      }\n\n      if (options.params.auth) {\n        options.auth = options.params.auth;\n        delete options.params.auth;\n      }\n\n      this._request(options, function (err, res, body) {\n        if (res && res.statusCode !== 200) {\n          err = new Error(\"Invalid HTTP Status Code: \".concat(res.statusCode));\n        }\n\n        if (err) {\n          return callback(err);\n        }\n\n        if (typeof body === 'string') {\n          try {\n            body = JSON.parse(body);\n          } catch (e) {\n            return callback(e);\n          }\n        }\n\n        callback(null, body);\n      });\n    }\n    /**\n     * Returns a log stream for this transport. Options object is optional.\n     * @param {Object} options - Stream options for this instance.\n     * @returns {Stream} - TODO: add return description\n     */\n\n  }, {\n    key: \"stream\",\n    value: function stream() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var stream = new Stream();\n      options = {\n        method: 'stream',\n        params: options\n      };\n\n      if (options.params.path) {\n        options.path = options.params.path;\n        delete options.params.path;\n      }\n\n      if (options.params.auth) {\n        options.auth = options.params.auth;\n        delete options.params.auth;\n      }\n\n      var buff = '';\n\n      var req = this._request(options);\n\n      stream.destroy = function () {\n        return req.destroy();\n      };\n\n      req.on('data', function (data) {\n        data = (buff + data).split(/\\n+/);\n        var l = data.length - 1;\n        var i = 0;\n\n        for (; i < l; i++) {\n          try {\n            stream.emit('log', JSON.parse(data[i]));\n          } catch (e) {\n            stream.emit('error', e);\n          }\n        }\n\n        buff = data[l];\n      });\n      req.on('error', function (err) {\n        return stream.emit('error', err);\n      });\n      return stream;\n    }\n    /**\n     * Make a request to a winstond server or any http server which can\n     * handle json-rpc.\n     * @param {function} options - Options to sent the request.\n     * @param {function} callback - Continuation to respond to when complete.\n     */\n\n  }, {\n    key: \"_request\",\n    value: function _request(options, callback) {\n      options = options || {};\n      var auth = options.auth || this.auth;\n      var path = options.path || this.path || '';\n      delete options.auth;\n      delete options.path; // Prepare options for outgoing HTTP request\n\n      var req = (this.ssl ? https : http).request({\n        method: 'POST',\n        host: this.host,\n        port: this.port,\n        path: \"/\".concat(path.replace(/^\\//, '')),\n        headers: this.headers,\n        auth: auth ? \"\".concat(auth.username, \":\").concat(auth.password) : '',\n        agent: this.agent\n      });\n      req.on('error', callback);\n      req.on('response', function (res) {\n        return res.on('end', function () {\n          return callback(null, res);\n        }).resume();\n      });\n      req.end(Buffer.from(JSON.stringify(options), 'utf8'));\n    }\n  }]);\n\n  return Http;\n}(TransportStream);"]},"metadata":{},"sourceType":"script"}